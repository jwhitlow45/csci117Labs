[local ["A","B","C","Times"] [Times = proc {$ C Y EXU1} [EXU1 = proc {$ EXU2} [case Y of nil() then [EXU2 = nil()] else [case Y of '|'(1:X 2:Xs) then [local ["EXU3","EXU4"] [local ["EXU5","EXU6"] [EXU5 = C,EXU6 = X,"IntMultiply" "EXU5" "EXU6" "EXU3"],local ["EXU5","EXU6"] [EXU5 = C,EXU6 = Xs,"Times" "EXU5" "EXU6" "EXU4"],EXU2 = '|'(1:EXU3 2:EXU4)]] else [skip]]]],local ["EXU1","EXU2","EXU3","EXU4"] [EXU1 = 1,EXU2 = 2,EXU3 = 3,EXU4 = 4,local ["EXU5","EXU6"] [EXU5 = EXU1,local ["EXU7","EXU8"] [EXU7 = EXU2,local ["EXU9","EXU10"] [EXU9 = EXU3,local ["EXU11","EXU12"] [EXU11 = EXU4,EXU12 = nil(),EXU10 = '|'(1:EXU11 2:EXU12)],EXU8 = '|'(1:EXU9 2:EXU10)],EXU6 = '|'(1:EXU7 2:EXU8)],A = '|'(1:EXU5 2:EXU6)]],local ["EXU1","EXU2"] [EXU1 = 10,EXU2 = A,"Times" "EXU1" "EXU2" "B"],C = B,skip/BC]]